// ---------------------------------------------------------------------------------
// OSRAM SCF5742 bit-bang driver for SC2040
// ---------------------------------------------------------------------------------
// These library routines allow you to control an OSRAM SC5742 intelligent serial
// display using four GPIO lines.
//
// This file contains prototype and constants.
//
// Characters are defined as 64-bit integers. For example, the character 'H' would
// be defined as below:
// 
//     | 0 | 0 | 0 | 1 | 0 | 0 | 0 | 1 | LSB
//     | 0 | 0 | 0 | 1 | 0 | 0 | 0 | 1 |
//     | 0 | 0 | 0 | 1 | 0 | 0 | 0 | 1 |
//     | 0 | 0 | 0 | 1 | 1 | 1 | 1 | 1 |
//     | 0 | 0 | 0 | 1 | 0 | 0 | 0 | 1 |
//     | 0 | 0 | 0 | 1 | 0 | 0 | 0 | 1 |
//     | 0 | 0 | 0 | 1 | 0 | 0 | 0 | 1 |
// MSB | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 |
//
// The typeface in the characters array is based on the HD44780 character set.
// 
// Notes:
// * Modify the pin constants to correspond to the pins you wire up
// ---------------------------------------------------------------------------------
// Source:  Own work (David Slik, https://github.com/dslik)
// License: CERN-OHL-S v2 (https://github.com/dslik/protonema/blob/main/license.md)
// ---------------------------------------------------------------------------------
#include <stdlib.h>
#include "pico/stdlib.h"

// Pin Constants
#define LOAD_PIN    11
#define DATA_PIN    10
#define CLK_PIN     9
#define RESET_PIN   8

// Default typeface, in ASCII order
static uint64_t characters[] = {
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0000000000000000,
    0x0004000404040404,
    0x00000000000A0A0A,
    0x000A0A1F0A1F0A0A,
    0x00041E050E140F04,
    0x0003130804021918,
    0x000D12150814120C,
    0x000000000008040C,
    0x0002040808080402,
    0x0008040202020408,
    0x000004150E150400,
    0x0004041F04040000,
    0x0008040C00000000,
    0x000000001F000000,
    0x000C0C0000000000,
    0x0000100804020100,
    0x000E11191513110E,
    0x000E040404040C04,
    0x001F10080601110E,
    0x000E11010204021F,
    0x0002021F120A0602,
    0x000E1101011E101F,
    0x000E11111E100807,
    0x000404040201111F,
    0x000E11110E11110E,
    0x000C02010F11110E,
    0x00000C0C000C0C00,
    0x0008040C000C0C00,
    0x0002040810080402,
    0x0000001F001F0000,
    0x0008040201020408,
    0x000400040201110E,
    0x000E15150D01110E,
    0x0011111F1111110E,
    0x001E11111E11111E,
    0x000E11101010110E,
    0x001C12111111121C,
    0x001F10101F10101F,
    0x001010101F10101F,
    0x000F11111710110E,
    0x001111111F111111,
    0x000E04040404040E,
    0x000C120202020207,
    0x0011121418141211,
    0x001F101010101010,
    0x0011111115151B11,
    0x0011111315191111,
    0x000E11111111110E,
    0x001010101E11111E,
    0x000D12151111110E,
    0x001112141E11111E,
    0x001E01010E10100F,
    0x000404040404041F,
    0x000E111111111111,
    0x00040A1111111111,
    0x000A151515111111,
    0x0011110A040A1111,
    0x000404040A111111,
    0x001F10080402011F,
    0x001C10101010101C,
    0x0004041F041F0A11,
    0x000E02020202020E,
    0x0000000000110A04,
    0x001F000000000000,
    0x0000000000020408,
    0x000F110F010E0000,
    0x001E111119161010,
    0x000E1110100E0000,
    0x000F1111130D0101,
    0x000E101F110E0000,
    0x000808081C080906,
    0x000E010F11110F00,
    0x0011111119161010,
    0x000E0404040C0004,
    0x000C120202060002,
    0x0012141814121010,
    0x000E04040404040C,
    0x00111115151E0000,
    0x0011111119160000,
    0x000E1111110E0000,
    0x0010101E111E0000,
    0x0001010F130D0000,
    0x0010101019160000,
    0x001E010E100E0000,
    0x00060908081C0808,
    0x000D131111110000,
    0x00040A1111110000,
    0x000A151511110000,
    0x00110A040A110000,
    0x001E010F11110000,
    0x001F0804021F0000,
    0x0002040408040402,
    0x0004040404040404,
    0x0008040402040408,
    0x000004021F020400,
    0x000004081F080400,
};

// Prototypes
void display_init(void);
void display_reset(void);
void display_send_byte(uint8_t data);
void display_send_digit(uint8_t digit, uint64_t pattern);
void display_send_string(char* string);
