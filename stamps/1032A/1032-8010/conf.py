#!/usr/bin/env python3
# -*- coding: utf-8 -*-
#
# Protonema documentation build configuration file
#
# This file is execfile()d with the current directory set to its
# containing dir.
#
# Note that not all possible configuration values are present in this
# autogenerated file.
#
# All configuration values have a default; values that are commented out
# serve to show the default.

# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.
#
# import os
# import sys
# sys.path.insert(0, os.path.abspath('.'))
import codecs
from string import Template

# -- General configuration ------------------------------------------------

# If your documentation needs a minimal Sphinx version, state it here.
#
# needs_sphinx = '1.0'

# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
# ones.
extensions = ['sphinx.ext.autodoc',
    'sphinx.ext.todo',
    'sphinx.ext.coverage']

# Add any paths that contain templates here, relative to this directory.
templates_path = ['_templates']

# The suffix(es) of source filenames.
# You can specify multiple suffix as a list of string:
#
# source_suffix = ['.rst', '.md']
source_suffix = ['.rst', '.md', '.txt']

# The master toctree document.
master_doc = 'template/index'

# General information about the project.
project = '1032A'
copyright = '2022, David Slik'
author = 'David Slik'

licensetext = codecs.open('./template/license.md', encoding='utf-8').read() + codecs.open('revisions.tex', encoding='utf-8').read()

# The version info for the project you're documenting, acts as replacement for
# |version| and |release|, also used in various other places throughout the
# built documents.
#
# The short X.Y version.
version = '1.0.0-draft.2'
# The full version, including alpha/beta/rc tags.
release = '1.0.0-draft.2'

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#
# This is also used if you do content translation via gettext catalogs.
# Usually you set "language" from the command line for these cases.
language = 'en'

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
# This patterns also effect to html_static_path and html_extra_path
exclude_patterns = [ 'readme.md', 'template/license.md']

# latex_appendices = ['bom']

# The name of the Pygments (syntax highlighting) style to use.
pygments_style = 'sphinx'

# If true, `todo` and `todoList` produce output, else they produce nothing.
todo_include_todos = True

# Enable the use of numfig
numfig = True

# -- Options for LaTeX output ---------------------------------------------
latex_engine = 'xelatex'

latex_contents = r'''
    \licensepage
    \tableofcontents
    \clearpage
    \listoffigures
    \clearpage
    \listoftables
    \clearpage
    \pagenumbering{arabic}
'''

latex_use_xindy = False

latex_defns = Template(r'''
    \def\licensepage{
        \pagestyle{normal}
        ${licensetext}
        \clearpage
    }
''')

# -- SNIA-style Title Page ---------------------------------------------
latex_maketitle = r'''
    \begin{titlepage}
        \begingroup % for PDF information dictionary
           \def\endgraf{ }\def\and{\& }%
           \pdfstringdefDisableCommands{\def\\{, }}% overwrite hyperref setup
           \hypersetup{pdfauthor={David Slik}, pdftitle={\constProdNumRaw Assembly}}%
        \endgroup

        \begin{tikzpicture}[remember picture, overlay]
          \draw[line width = 2pt] ($(current page.north west) + (0.5in,-0.5in)$) rectangle ($(current page.south east) + (-0.5in,0.5in)$);
        \end{tikzpicture}

        \begin{center}
            {\Huge ASSEMBLY INSTRUCTIONS }\par
            \vspace{10pt}
            {\Large \constProdNumRaw\ \constProdNameUpperRaw }\par
            \vspace{20pt}
            \sphinxlogo
            \vspace{20pt}
            {\Large Document control number: \constPartNumRaw-8010 }\par
            \vspace{10pt}
            {\Large Document date: 2022-12-08 }\par
            \vspace{10pt}
            {\Large Document revision: \version }\par
            \vspace{20pt}
        \end{center}
        \begin{flushleft}
            {\normalsize
                ABSTRACT: This document provides instructions on how to assembly and test a \constProdNumRaw\ \constProdNameLowerRaw. A complete bill of materials is included as an annex. 
            }\par
            {\normalsize
               Suggestions and corrections should be directed to \url{http://www.github.com/dslik/protonema/issues}
            }\par
            {\large
               Serial number:\quad\quad\quad\quad\quad\quad\quad\quad Assembly date:\quad\quad\quad\quad\quad\quad\quad\quad Assembled by:
            }\par
        \end{flushleft}
        \setcounter{footnote}{0}
        \let\thanks\relax\let\maketitle\relax
    \end{titlepage}
    \setcounter{page}{1}
    \pagenumbering{roman}
'''

latex_elements = {
    # The paper size ('letterpaper' or 'a4paper').
    #
    'papersize': 'a4paper',

    'fncychap': '',

    # The font size ('10pt', '11pt' or '12pt').
    #
    'pointsize': '10pt',

    # Additional stuff for the LaTeX preamble.
    #
    'inputenc': '',
    'utf8extra': '',

    'printindex': '',
    'fontpkg': r'''
    % Set fonts
    \usepackage{fontspec}
    \setsansfont{Arial}
    \setmainfont{Arial}
    \setmonofont{Courier New}

    % Adjust font size
    \usepackage{scrextend}
    \changefontsizes[10pt]{9pt}

    \usepackage{enumitem}

    ''',

    'preamble': r'''

    % Variables
    \newcommand{\constPartNumRaw}{1032}
    \newcommand{\constProdNumRaw}{1032A}
    \newcommand{\constProdNameUpperRaw}{LED Matrix Stamp}
    \newcommand{\constProdNameLowerRaw}{LED matrix stamp}
    \newcommand{\constPartNum}{\protect\)\constPartNumRaw\protect\(}
    \newcommand{\constProdNum}{\protect\)\constProdNumRaw\protect\(}
    \newcommand{\constProdNameUpper}{\protect\)\constProdNameUpperRaw\protect\(}
    \newcommand{\constProdNameLower}{\protect\)\constProdNameLowerRaw\protect\(}

    % Graphics package
    \usepackage{graphbox}

    % Make table headers lightgray
    \usepackage{colortbl}
    \protected\def\sphinxstyletheadfamily {\cellcolor{lightgray}\sffamily}

    % Change Latex's Part/Chapter/Appendix to Part/Section/Annex
    \addto\captionsenglish{\renewcommand{\partname}{Part~}}
    \addto\captionsenglish{\renewcommand{\chaptername}{Section~}}
    \addto\captionsenglish{\renewcommand{\appendixname}{Annex~}}
    \addto\captionsenglish{\renewcommand{\figurename}{Fig.\enspace}} 
    \usepackage{chngcntr}
    \counterwithout{figure}{chapter}
    \counterwithout{table}{chapter}
    
    % Change the tables of content/figure/table
    \usepackage{tocloft}
    \setlength{\cftchapnumwidth}{18pt}
    \setlength{\cftsecnumwidth}{24pt}
    \setlength{\cftsubsecnumwidth}{28pt}
    \message{figure}
    \newlength{\myfiglen}
    \renewcommand{\cftfigpresnum}{\figurename}
      \renewcommand{\cftfigaftersnum}{:}
      \settowidth{\myfiglen}{\cftfigpresnum\cftfigaftersnum}
      \addtolength{\cftfignumwidth}{\myfiglen}
    \message{table}
    \newlength{\mytablen}
    \renewcommand{\cfttabpresnum}{\tablename}
      \renewcommand{\cfttabaftersnum}{:}
      \settowidth{\mytablen}{\cfttabpresnum\cfttabaftersnum}
      \addtolength{\cfttabnumwidth}{\mytablen}
    \message{chapter}
    \newlength{\mychaplen}
    \renewcommand{\cftchappresnum}{\chaptername}
      \renewcommand{\cftchapaftersnum}{:}
      \settowidth{\mychaplen}{\cftchappresnum\cftchapaftersnum}
      \addtolength{\cftchapnumwidth}{\mychaplen}


    % Clear pages before new Part
    \usepackage{titlesec}
    \usepackage{tikz}
    \usetikzlibrary{calc}

    % Change the page headers
    \makeatletter
    \fancypagestyle{normal}{
        \fancyhf{}
        \fancyhead[LE,LO]{{\py@HeaderFamily \constPartNumRaw-8010 - \constProdNumRaw\ assembly instructions v\version}}
        \fancyhead[RE,RO]{{\py@HeaderFamily Public / Controlled}}
        \fancyfoot[LE,LO]{{\py@HeaderFamily \copyright \  VE7FIM 2022}}
        \fancyfoot[RE,RO]{{\py@HeaderFamily\thepage}}
        \renewcommand{\headrulewidth}{0.4pt}
        \renewcommand{\footrulewidth}{0.4pt}
        }

    \fancypagestyle{plain}{
        \fancyhf{}
        \fancyhead[LE,LO]{{\py@HeaderFamily \constPartNumRaw-8010 - \constProdNumRaw\ assembly instructions v\version}}
        \fancyhead[RE,RO]{{\py@HeaderFamily Public / Controlled}}
        \fancyfoot[LE,LO]{{\py@HeaderFamily \copyright \  VE7FIM 2022}}
        \fancyfoot[RE,RO]{{\py@HeaderFamily\thepage}}
        \renewcommand{\headrulewidth}{0.4pt}
        \renewcommand{\footrulewidth}{0.4pt}
        }
    \makeatother

    % Create linenumers
    \usepackage{lineno} 
    \linenumbers

''' + latex_defns.substitute(licensetext=licensetext),   

    'tableofcontents': latex_contents,
    # Latex figure (float) alignment
    #
    # 'figure_align': 'htbp',
    
    'sphinxsetup': 'verbatimhintsturnover=true',
    'extraclassoptions': 'openany',
    'releasename': 'Version',
    'maketitle': latex_maketitle,    
}

# Grouping the document tree into LaTeX files. List of tuples
# (source start file, target name, title,
#  author, documentclass [howto, manual, or own class]).
latex_documents = [
    (master_doc, '1032-8010.tex', '1032A assembly instructions',
     'DRAFT', 'manual'),
]

latex_logo = 'images/1032A.jpg'
latex_toplevel_sectioning = 'part'



